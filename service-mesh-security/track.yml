slug: service-mesh-security
id: bi8lzub8nryh
type: track
title: Security
teaser: Security
description: Security
icon: https://storage.googleapis.com/instruqt-frontend/assets/hashicorp/tracks/consul.png
tags:
- ""
owner: hashicorp
developers:
- jackson.nic@gmail.com
- christie@hashicorp.com
- anubhav9mishra@gmail.com
- eveld@hashicorp.com
private: false
published: false
challenges:
- slug: setup
  id: lsvjerqvwsyk
  type: challenge
  title: Setup
  teaser: In this challenge you will learn how to deploy Consul Connect to Kubernetes
    using a Helm chart
  assignment: "# Install Consul Connect on Kubernetes\r\n\r\nModify the values.yml
    file to enable the connect features\r\n\r\n```\r\nui:\r\n  enabled: true\r\n  service:\r\n
    \   enabled: true\r\n    type: null\r\n\r\nclient:\r\n  enabled: true\r\n  grpc:
    true\r\n\r\nconnectInject:\r\n  enabled: true\r\n```\r\n\r\nYou can then deploy
    the helm chart using the command\r\n\r\n```\r\nhelm install -f values.yml \\\r\n
    \ -n consul  ./consul-helm-0.7.0\r\n```\r\n\r\nYou can test Consul has been configured
    correctly by viewing the UI in the tabs"
  notes:
  - type: text
    contents: helm install -f values.yml -n consul ./consul-helm-0.7.0
  tabs:
  - title: Shell
    type: terminal
    hostname: kubernetes
  - title: Editor
    type: code
    hostname: kubernetes
    path: /tmp/security/exercises/01-setup-consul/files/consul-helm
  - title: Emojify
    type: service
    hostname: kubernetes
    port: 30000
  - title: Kubernetes
    type: service
    hostname: kubernetes
    path: /api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/deployment?namespace=default
    port: 8001
  - title: Consul
    type: service
    hostname: kubernetes
    path: /ui/
    port: 31410
  difficulty: basic
  timelimit: 3600
- slug: enable-connect
  id: vp8e3ttfewg6
  type: challenge
  title: Enabling Consul Connect for a pod
  teaser: In this challenge you will enable Consul Connect for a pod by adding Kubernetes
    annotations
  assignment: "Configure the deployment for the ingress pod to add the consul connect
    injection annotation.\r\n\r\n[https://www.consul.io/docs/platform/k8s/connect.html](https://www.consul.io/docs/platform/k8s/connect.html)\r\n\r\nOnce
    you have configured inject re-deploy the pod using kubectl `kubectl -f ingress.yml`.\r\n\r\nYou
    can confirm that Consul has automatically injected the Envoy dataplane as a sidecar
    by inspecting the pod in the Kubernetes dashboard or by running `kubectl describe
    pod`.\r\n\r\n**HINT:** You can look at the api.yml file for the correct configuration
    options."
  notes:
  - type: text
    contents: "Consul Connect can automatically add and configure a Envoy sidecar
      for your pod.\r\n\r\nTo enable this we add the annotation `\"consul.hashicorp.com/connect-inject\":
      \"true\"` to our templates metadata.\r\n\r\n```\r\nspec:\r\n  replicas: 1\r\n
      \ selector:\r\n    matchLabels:\r\n      app: emojify-api\r\n  template:\r\n
      \   metadata:\r\n      labels:\r\n        app: emojify-api\r\n      annotations:\r\n
      \       \"consul.hashicorp.com/connect-inject\": \"true\"\r\n```"
  tabs:
  - title: Shell
    type: terminal
    hostname: kubernetes
  - title: Emojify
    type: service
    hostname: kubernetes
    port: 30000
  - title: Kubernetes
    type: service
    hostname: kubernetes
    path: /api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/deployment?namespace=default
    port: 8001
  - title: Editor
    type: code
    hostname: kubernetes
    path: /tmp/security/exercises/02-setup-connect/files/app
  - title: Consul
    type: service
    hostname: kubernetes
    path: /ui/
    port: 31410
  difficulty: basic
  timelimit: 500
checksum: "5638731959044354236"
